// Generated by view binder compiler. Do not edit!
package id.co.mondo.latihantfliteprediction.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import id.co.mondo.latihantfliteprediction.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnPredict;

  @NonNull
  public final EditText edSales;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView tvResult;

  @NonNull
  public final TextView tvSales;

  @NonNull
  public final TextView tvTitle;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnPredict,
      @NonNull EditText edSales, @NonNull ConstraintLayout main, @NonNull TextView tvResult,
      @NonNull TextView tvSales, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnPredict = btnPredict;
    this.edSales = edSales;
    this.main = main;
    this.tvResult = tvResult;
    this.tvSales = tvSales;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPredict;
      Button btnPredict = ViewBindings.findChildViewById(rootView, id);
      if (btnPredict == null) {
        break missingId;
      }

      id = R.id.edSales;
      EditText edSales = ViewBindings.findChildViewById(rootView, id);
      if (edSales == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.tvResult;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      id = R.id.tvSales;
      TextView tvSales = ViewBindings.findChildViewById(rootView, id);
      if (tvSales == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnPredict, edSales, main,
          tvResult, tvSales, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
