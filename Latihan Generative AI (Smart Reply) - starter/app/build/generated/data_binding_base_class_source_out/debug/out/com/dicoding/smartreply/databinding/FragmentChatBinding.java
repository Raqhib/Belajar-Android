// Generated by view binder compiler. Do not edit!
package com.dicoding.smartreply.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.smartreply.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChatBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final Button btnSwitchUser;

  @NonNull
  public final RecyclerView rvChatHistory;

  @NonNull
  public final RecyclerView rvSmartReplyOptions;

  @NonNull
  public final TextInputEditText tietInputTextEditText;

  @NonNull
  public final TextInputLayout tilInputTextLayout;

  @NonNull
  public final MaterialToolbar topAppBar;

  @NonNull
  public final AppBarLayout topAppBarLayout;

  @NonNull
  public final TextView tvCurrentUser;

  private FragmentChatBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSend,
      @NonNull Button btnSwitchUser, @NonNull RecyclerView rvChatHistory,
      @NonNull RecyclerView rvSmartReplyOptions, @NonNull TextInputEditText tietInputTextEditText,
      @NonNull TextInputLayout tilInputTextLayout, @NonNull MaterialToolbar topAppBar,
      @NonNull AppBarLayout topAppBarLayout, @NonNull TextView tvCurrentUser) {
    this.rootView = rootView;
    this.btnSend = btnSend;
    this.btnSwitchUser = btnSwitchUser;
    this.rvChatHistory = rvChatHistory;
    this.rvSmartReplyOptions = rvSmartReplyOptions;
    this.tietInputTextEditText = tietInputTextEditText;
    this.tilInputTextLayout = tilInputTextLayout;
    this.topAppBar = topAppBar;
    this.topAppBarLayout = topAppBarLayout;
    this.tvCurrentUser = tvCurrentUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_send;
      Button btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.btn_switchUser;
      Button btnSwitchUser = ViewBindings.findChildViewById(rootView, id);
      if (btnSwitchUser == null) {
        break missingId;
      }

      id = R.id.rv_chatHistory;
      RecyclerView rvChatHistory = ViewBindings.findChildViewById(rootView, id);
      if (rvChatHistory == null) {
        break missingId;
      }

      id = R.id.rv_smartReplyOptions;
      RecyclerView rvSmartReplyOptions = ViewBindings.findChildViewById(rootView, id);
      if (rvSmartReplyOptions == null) {
        break missingId;
      }

      id = R.id.tiet_inputTextEditText;
      TextInputEditText tietInputTextEditText = ViewBindings.findChildViewById(rootView, id);
      if (tietInputTextEditText == null) {
        break missingId;
      }

      id = R.id.til_inputTextLayout;
      TextInputLayout tilInputTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (tilInputTextLayout == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      id = R.id.topAppBarLayout;
      AppBarLayout topAppBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (topAppBarLayout == null) {
        break missingId;
      }

      id = R.id.tv_currentUser;
      TextView tvCurrentUser = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentUser == null) {
        break missingId;
      }

      return new FragmentChatBinding((ConstraintLayout) rootView, btnSend, btnSwitchUser,
          rvChatHistory, rvSmartReplyOptions, tietInputTextEditText, tilInputTextLayout, topAppBar,
          topAppBarLayout, tvCurrentUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
